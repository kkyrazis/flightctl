// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"agGaCHMBAgA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
