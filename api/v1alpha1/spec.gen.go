// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AgA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
